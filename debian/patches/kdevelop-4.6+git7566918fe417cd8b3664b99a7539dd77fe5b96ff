diff --git a/debuggers/gdb/kdevgdb.desktop.cmake b/debuggers/gdb/kdevgdb.desktop.cmake
index 8cb65bb..4286f25 100644
--- a/debuggers/gdb/kdevgdb.desktop.cmake
+++ b/debuggers/gdb/kdevgdb.desktop.cmake
@@ -3,7 +3,7 @@ Type=Service
 Exec=blubb
 Comment=This plugin provides a frontend for GDB, a source-level debugger for C, C++ and more.
 Comment[bs]=Ovaj dodatak pruža link za GDB, ispravljač grešaka izvornog nivoa za C, C++ i druge.
-Comment[ca]=Aquest connector proveeix d'un frontal per GDB, un depurador a nivell de codi per C,C++ i més llenguatges.
+Comment[ca]=Aquest connector proveeix d'un frontal per GDB, un depurador a nivell de codi per C, C++ i més llenguatges.
 Comment[ca@valencia]=Este connector proveeix d'un frontal per GDB, un depurador a nivell de codi per C,C++ i més llenguatges.
 Comment[da]=Dette plugin sørger for en brugerflade til GDB, en fejlsøger til C, C++ og mere.
 Comment[de]=Dieses Modul stellt eine Oberfläche für GDB zur Verfügung. GDB ist ein Debugger für C, C++ und weitere Sprachen.
diff --git a/debuggers/gdb/mi/milexer.cpp b/debuggers/gdb/mi/milexer.cpp
index 06a74eb..9768060 100644
--- a/debuggers/gdb/mi/milexer.cpp
+++ b/debuggers/gdb/mi/milexer.cpp
@@ -139,7 +139,7 @@ int MILexer::nextToken(int &pos, int &len)
         start = m_ptr;
 
         ch = m_contents[m_ptr];
-        Q_ASSERT(ch >= 0 && short(ch) < 128);
+        Q_ASSERT(ch >= 0);
         (this->*s_scan_table[static_cast<uchar>(ch)])(&kind);
 
         switch (kind) {
diff --git a/file_templates/CMakeLists.txt b/file_templates/CMakeLists.txt
index cf8c753..5ca00fd 100644
--- a/file_templates/CMakeLists.txt
+++ b/file_templates/CMakeLists.txt
@@ -23,6 +23,7 @@ kdevplatform_add_file_templates(${filetemplate_DIRS})
 install ( FILES
     common/method_declaration_cpp.txt
     common/method_definition_cpp.txt
+    common/license_header_cpp.txt
     common/class_declaration_cpp.txt
     common/cpp_header.h
     common/cpp_header_onlyfunctions.h
diff --git a/file_templates/classes/c_gobject/class.c b/file_templates/classes/c_gobject/class.c
index a0e9d34..1ae60fb 100644
--- a/file_templates/classes/c_gobject/class.c
+++ b/file_templates/classes/c_gobject/class.c
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
-{{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #include "{{ output_file_header }}"
diff --git a/file_templates/classes/c_gobject/class.h b/file_templates/classes/c_gobject/class.h
index 22b8db3..13a6284 100644
--- a/file_templates/classes/c_gobject/class.h
+++ b/file_templates/classes/c_gobject/class.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
-{{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 {% with namespaces|join:"_"|default:"___"|add:"_"|cut:"____"|upper as uc_prefix %}
diff --git a/file_templates/classes/c_gobject_private/class.c b/file_templates/classes/c_gobject_private/class.c
index 3f604b2..d931964 100644
--- a/file_templates/classes/c_gobject_private/class.c
+++ b/file_templates/classes/c_gobject_private/class.c
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
-{{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #include "{{ output_file_header }}"
diff --git a/file_templates/classes/c_gobject_private/class.h b/file_templates/classes/c_gobject_private/class.h
index 93f2bfb..9786016 100644
--- a/file_templates/classes/c_gobject_private/class.h
+++ b/file_templates/classes/c_gobject_private/class.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
-{{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 {% with namespaces|join:"_"|default:"___"|add:"_"|cut:"____"|upper as uc_prefix %}
diff --git a/file_templates/classes/c_gobject_properties/class.c b/file_templates/classes/c_gobject_properties/class.c
index a996d84..cbfb32b 100644
--- a/file_templates/classes/c_gobject_properties/class.c
+++ b/file_templates/classes/c_gobject_properties/class.c
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
-{{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #include "{{ output_file_header }}"
diff --git a/file_templates/classes/c_gobject_properties/class.h b/file_templates/classes/c_gobject_properties/class.h
index 24b0a69..06f791f 100644
--- a/file_templates/classes/c_gobject_properties/class.h
+++ b/file_templates/classes/c_gobject_properties/class.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
-{{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 {% with namespaces|join:"_"|default:"___"|add:"_"|cut:"____"|upper as uc_prefix %}
diff --git a/file_templates/classes/private_pointer/class.cpp b/file_templates/classes/private_pointer/class.cpp
index 822abc7..98fd9b0 100644
--- a/file_templates/classes/private_pointer/class.cpp
+++ b/file_templates/classes/private_pointer/class.cpp
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #include "{{ output_file_header }}"
diff --git a/file_templates/classes/private_pointer/class_p.h b/file_templates/classes/private_pointer/class_p.h
index 61ff11b..be2634b 100644
--- a/file_templates/classes/private_pointer/class_p.h
+++ b/file_templates/classes/private_pointer/class_p.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #ifndef {{ private_class_name|upper}}_H
diff --git a/file_templates/classes/python_basic/class.py b/file_templates/classes/python_basic/class.py
index 72f2441..52222c5 100644
--- a/file_templates/classes/python_basic/class.py
+++ b/file_templates/classes/python_basic/class.py
@@ -1,8 +1,12 @@
 {% load kdev_filters %}
+{% block license_header %}
+{% if license %}
 #
 
 {{ license|lines_prepend:"# " }}
 #
+{% endif %}
+{% endblock license_header %}
 
 
 class {{ name }}{% if base_classes %}({% for inh in base_classes %}{{ inh.baseType }}{% if not forloop.last %}, {% endif %}{% endfor %}){% endif %}:
diff --git a/file_templates/common/cpp_header.h b/file_templates/common/cpp_header.h
index 61086a5..ac1a672 100644
--- a/file_templates/common/cpp_header.h
+++ b/file_templates/common/cpp_header.h
@@ -1,12 +1,5 @@
 {% load kdev_filters %}
-{% block license_header %}
-{% if license %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
-{% endif %}
-{% endblock license_header %}
+{% include "license_header_cpp.txt" %}
 
 
 {% block include_guard_open %}
diff --git a/file_templates/common/cpp_header_onlyfunctions.h b/file_templates/common/cpp_header_onlyfunctions.h
index 3fec7c6..d6b7feb 100644
--- a/file_templates/common/cpp_header_onlyfunctions.h
+++ b/file_templates/common/cpp_header_onlyfunctions.h
@@ -1,10 +1,5 @@
 {% load kdev_filters %}
-{% block license_header %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
-{% endblock license_header %}
+{% include "license_header_cpp.txt" %}
 
 
 {% block include_guard_open %}
diff --git a/file_templates/common/cpp_implementation.cpp b/file_templates/common/cpp_implementation.cpp
index 10800bd..07cb8af 100644
--- a/file_templates/common/cpp_implementation.cpp
+++ b/file_templates/common/cpp_implementation.cpp
@@ -1,10 +1,5 @@
 {% load kdev_filters %}
-{% block license_header %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
-{% endblock license_header %}
+{% include "license_header_cpp.txt" %}
 
 
 {% block includes %}
diff --git a/file_templates/common/license_header_cpp.txt b/file_templates/common/license_header_cpp.txt
new file mode 100644
index 0000000..622b9f7
--- /dev/null
+++ b/file_templates/common/license_header_cpp.txt
@@ -0,0 +1,9 @@
+{% load kdev_filters %}
+{% block license_header %}
+{% if license %}
+/*
+
+ {{ license|lines_prepend:" * " }}
+ */
+{% endif %}
+{% endblock license_header %}
diff --git a/file_templates/testing/cpp_qtestlib/class.cpp b/file_templates/testing/cpp_qtestlib/class.cpp
index f72984d..65dedee 100644
--- a/file_templates/testing/cpp_qtestlib/class.cpp
+++ b/file_templates/testing/cpp_qtestlib/class.cpp
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 #include "{{ output_file_header }}"
 
diff --git a/file_templates/testing/cpp_qtestlib/class.h b/file_templates/testing/cpp_qtestlib/class.h
index f7f30b9..fee04cd 100644
--- a/file_templates/testing/cpp_qtestlib/class.h
+++ b/file_templates/testing/cpp_qtestlib/class.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #ifndef {{ name|upper }}_H
diff --git a/file_templates/testing/cpp_qtestlib_kde/class.cpp b/file_templates/testing/cpp_qtestlib_kde/class.cpp
index 4e3ddad..db9b83e 100644
--- a/file_templates/testing/cpp_qtestlib_kde/class.cpp
+++ b/file_templates/testing/cpp_qtestlib_kde/class.cpp
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #include "{{ output_file_header }}"
diff --git a/file_templates/testing/cpp_qtestlib_kde/class.h b/file_templates/testing/cpp_qtestlib_kde/class.h
index a169f64..a8038f3 100644
--- a/file_templates/testing/cpp_qtestlib_kde/class.h
+++ b/file_templates/testing/cpp_qtestlib_kde/class.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #ifndef {{ name|upper }}_H
diff --git a/file_templates/testing/cpp_qtestlib_kdevelop/class.cpp b/file_templates/testing/cpp_qtestlib_kdevelop/class.cpp
index 2b3a851..6f978eb 100644
--- a/file_templates/testing/cpp_qtestlib_kdevelop/class.cpp
+++ b/file_templates/testing/cpp_qtestlib_kdevelop/class.cpp
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #include "{{ output_file_header }}"
diff --git a/file_templates/testing/cpp_qtestlib_kdevelop/class.h b/file_templates/testing/cpp_qtestlib_kdevelop/class.h
index 11c4970..147586f 100644
--- a/file_templates/testing/cpp_qtestlib_kdevelop/class.h
+++ b/file_templates/testing/cpp_qtestlib_kdevelop/class.h
@@ -1,8 +1,5 @@
 {% load kdev_filters %}
-/*
-
- {{ license|lines_prepend:" * " }}
- */
+{% include "license_header_cpp.txt" %}
 
 
 #ifndef {{ name|upper }}_H
diff --git a/file_templates/testing/php_phpunit/class.php b/file_templates/testing/php_phpunit/class.php
index 89d6985..1e01171 100644
--- a/file_templates/testing/php_phpunit/class.php
+++ b/file_templates/testing/php_phpunit/class.php
@@ -1,11 +1,14 @@
 {% load kdev_filters %}
 <?php
 
-
+{% block license_header %}
+{% if license %}
 /*
 
 {{ license|lines_prepend:" * " }}
  */
+{% endif %}
+{% endblock license_header %}
 
 
 class {{ name }} extends PHPUnit_Framework_TestCase
diff --git a/file_templates/testing/python_pyunit/class.py b/file_templates/testing/python_pyunit/class.py
index 6e24f83..3b13695 100644
--- a/file_templates/testing/python_pyunit/class.py
+++ b/file_templates/testing/python_pyunit/class.py
@@ -1,8 +1,12 @@
 {% load kdev_filters %}
+{% block license_header %}
+{% if license %}
 #
 
  {{ license|lines_prepend:"# " }}
 #
+{% endif %}
+{% endblock license_header %}
 
 
 import unittest
diff --git a/languages/cpp/cppduchain/usebuilder.cpp b/languages/cpp/cppduchain/usebuilder.cpp
index 0371284..05525a4 100644
--- a/languages/cpp/cppduchain/usebuilder.cpp
+++ b/languages/cpp/cppduchain/usebuilder.cpp
@@ -118,6 +118,7 @@ void UseBuilder::visitTypeIDOperator(TypeIDOperatorAST* node)
 
 void UseBuilder::visitQPropertyDeclaration(QPropertyDeclarationAST* node)
 {
+  buildUsesForName(node->member);
   buildUsesForName(node->getter);
   buildUsesForName(node->setter);
   buildUsesForName(node->resetter);
diff --git a/languages/cpp/parser/ast.h b/languages/cpp/parser/ast.h
index 260dbb0..db20d74 100644
--- a/languages/cpp/parser/ast.h
+++ b/languages/cpp/parser/ast.h
@@ -334,21 +334,15 @@ public:
   const ListNode<PtrOperatorAST*> *ptr_ops;
   NameAST *name;
 
+  /// MEMBER, since Qt 5.1
+  NameAST *member;
   NameAST *getter;
   NameAST *setter;
   NameAST *resetter;
   NameAST *notifier;
 
   NameAST *designableMethod;
-  bool designableValue;
-
   NameAST *scriptableMethod;
-  bool scriptableValue;
-
-  bool stored;
-  bool user;
-  bool constant;
-  bool final;
 };
 
 class CastExpressionAST : public ExpressionAST
diff --git a/languages/cpp/parser/default_visitor.cpp b/languages/cpp/parser/default_visitor.cpp
index 7ba4286..9b43ae0 100644
--- a/languages/cpp/parser/default_visitor.cpp
+++ b/languages/cpp/parser/default_visitor.cpp
@@ -505,6 +505,8 @@ void DefaultVisitor::visitQPropertyDeclaration(QPropertyDeclarationAST *node)
   visitNodes(this, node->ptr_ops);
   visit(node->name);
 
+  if (node->member)
+    visit(node->member);
   if (node->getter)
     visit(node->getter);
   if (node->setter)
diff --git a/languages/cpp/parser/parser.cpp b/languages/cpp/parser/parser.cpp
index ce6497d..c59bd78 100644
--- a/languages/cpp/parser/parser.cpp
+++ b/languages/cpp/parser/parser.cpp
@@ -5323,19 +5323,13 @@ bool Parser::parseQProperty(DeclarationAST *&node)
     uint start = session->token_stream->cursor();
     QPropertyDeclarationAST *ast = CreateNode<QPropertyDeclarationAST>(session->mempool);
 
+    ast->member = 0;
     ast->getter = 0;
     ast->setter = 0;
     ast->resetter = 0;
     ast->notifier = 0;
     ast->designableMethod = 0;
-    ast->designableValue = true;
     ast->scriptableMethod = 0;
-    ast->scriptableValue = true;
-    ast->stored = true;
-    ast->user = false;
-    ast->constant = false;
-    ast->final = false;
-
 
     CHECK(Token___qt_property__);
     CHECK('(');
@@ -5350,10 +5344,12 @@ bool Parser::parseQProperty(DeclarationAST *&node)
     if(!parseName(ast->name))
       return false;
 
+    static KDevelop::IndexedString memberStr("MEMBER");
     static KDevelop::IndexedString readStr("READ");
     static KDevelop::IndexedString writeStr("WRITE");
     static KDevelop::IndexedString resetStr("RESET");
     static KDevelop::IndexedString notifyStr("NOTIFY");
+    static KDevelop::IndexedString revisionStr("REVISION");
     static KDevelop::IndexedString designableStr("DESIGNABLE");
     static KDevelop::IndexedString scriptableStr("SCRIPTABLE");
     static KDevelop::IndexedString storedStr("STORED");
@@ -5363,7 +5359,11 @@ bool Parser::parseQProperty(DeclarationAST *&node)
 
     while(session->token_stream->lookAhead() != ')') {
       const KDevelop::IndexedString propertyField = session->token_stream->symbol(session->token_stream->cursor());
-      if(propertyField == readStr) {
+      if (propertyField == memberStr) {
+        advance(); // skip MEMBER
+        if (!parseName(ast->member))
+          return false;
+      } else if(propertyField == readStr) {
         advance(); // skip READ
         if(!parseName(ast->getter))
           return false;
@@ -5379,14 +5379,19 @@ bool Parser::parseQProperty(DeclarationAST *&node)
         advance(); // skip NOTIFY
         if(!parseName(ast->notifier))
           return false;
-      }else if(propertyField == designableStr){
+      } else if (propertyField == revisionStr) {
+        advance(); // skip REVISION
+        if (session->token_stream->lookAhead() == Token_number_literal) {
+          advance();
+        } else {
+          return false;
+        }
+      } else if(propertyField == designableStr){
         advance(); // skip DESIGNABLE
         if(session->token_stream->lookAhead() == Token_true){
           advance(); // skip 'true'
-          ast->designableValue = true;
         }else if(session->token_stream->lookAhead() == Token_false){
           advance(); // skip 'false'
-          ast->designableValue = false;
         }else{
           if(!parseName(ast->designableMethod))
             return false;
@@ -5395,10 +5400,8 @@ bool Parser::parseQProperty(DeclarationAST *&node)
         advance(); // skip SCRIPTABLE
         if(session->token_stream->lookAhead() == Token_true){
           advance(); // skip 'true'
-          ast->scriptableValue = true;
         }else if(session->token_stream->lookAhead() == Token_false){
           advance(); // skip 'false'
-          ast->scriptableValue = false;
         }else{
           if(!parseName(ast->scriptableMethod))
             return false;
@@ -5407,10 +5410,8 @@ bool Parser::parseQProperty(DeclarationAST *&node)
         advance(); // skip STORED
         if(session->token_stream->lookAhead() == Token_true){
           advance(); // skip 'true'
-          ast->stored = true;
         }else if(session->token_stream->lookAhead() == Token_false){
           advance(); // skip 'false'
-          ast->stored = false;
         }else{
           return false;
         }
@@ -5418,19 +5419,15 @@ bool Parser::parseQProperty(DeclarationAST *&node)
         advance(); // skip USER
         if(session->token_stream->lookAhead() == Token_true){
           advance(); // skip 'true'
-          ast->user = true;
         }else if(session->token_stream->lookAhead() == Token_false){
           advance(); // skip 'false'
-          ast->user = false;
         }else{
           return false;
         }
       }else if(propertyField == constantStr){
         advance(); // skip CONSTANT
-        ast->constant = true;
       }else if(propertyField == finalStr){
         advance(); // skip FINAL
-        ast->final = true;
       }else{
         return false;
       }
diff --git a/languages/cpp/parser/tests/test_parser.cpp b/languages/cpp/parser/tests/test_parser.cpp
index 5956f19..f4a4dbb 100644
--- a/languages/cpp/parser/tests/test_parser.cpp
+++ b/languages/cpp/parser/tests/test_parser.cpp
@@ -496,6 +496,7 @@ void TestParser::testEscapedNewline()
 {
   QFETCH(QByteArray, module);
   TranslationUnitAST* ast = parse(module);
+  Q_UNUSED(ast);
   QVERIFY(control.problems().isEmpty());
 }
 
@@ -689,72 +690,54 @@ void TestParser::testParseFile()
 void TestParser::testQProperty_data()
 {
   QTest::addColumn<QByteArray>("code");
+  QTest::addColumn<bool>("hasMember");
   QTest::addColumn<bool>("hasGetterMethod");
   QTest::addColumn<bool>("hasSetterMethod");
   QTest::addColumn<bool>("hasResetterMethod");
   QTest::addColumn<bool>("hasNotifierMethod");
   QTest::addColumn<bool>("hasDesignableMethod");
   QTest::addColumn<bool>("hasScriptableMethod");
-  QTest::addColumn<bool>("isDesignable");
-  QTest::addColumn<bool>("isScriptable");
-  QTest::addColumn<bool>("isStored");
-  QTest::addColumn<bool>("isUser");
-  QTest::addColumn<bool>("isConstant");
-  QTest::addColumn<bool>("isFinal");
 
+  QTest::newRow("member") << QByteArray("class Class{\n__qt_property__(bool myProp MEMBER m_prop)\n};")
+                          << true << false << false << false << false << false << false;
   QTest::newRow("read") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop)\n};")
-                        << true << false << false << false << false << false
-                        << true << true << true << false << false << false;
+                        << false << true << false << false << false << false << false;
   QTest::newRow("write") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop WRITE prop)\n};")
-                          << true << true << false << false << false << false
-                          << true << true << true << false << false << false;
+                          << false << true << true << false << false << false << false;
   QTest::newRow("reset") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop RESET prop)\n};")
-                          << true << false << true << false << false << false
-                          << true << true << true << false << false << false;
+                          << false << true << false << true << false << false << false;
   QTest::newRow("notify") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop NOTIFY prop)\n};")
-                          << true << false << false << true << false << false
-                          << true << true << true << false << false << false;
-  QTest::newRow("desable") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop DESIGNABLE prop)\n};")
-                            << true << false << false << false << true << false
-                            << true << true << true << false << false << false;
-  QTest::newRow("scpable") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop SCRIPTABLE prop)\n};")
-                            << true << false << false << false << false << true
-                            << true << true << true << false << false << false;
-  QTest::newRow("desvalue") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop DESIGNABLE false)\n};")
-                            << true << false << false << false << false << false
-                            << false << true << true << false << false << false;
-  QTest::newRow("scpvalue") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop SCRIPTABLE false)\n};")
-                            << true << false << false << false << false << false
-                            << true << false << true << false << false << false;
+                          << false << true << false << false << true << false << false;
+  QTest::newRow("designable_method") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop DESIGNABLE prop)\n};")
+                            << false << true << false << false << false << true << false;
+  QTest::newRow("scriptable_method") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop SCRIPTABLE prop)\n};")
+                            << false << true << false << false << false << false << true;
+  QTest::newRow("revision") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop REVISION 1)\n};")
+                            << false << true << false << false << false << false << false;
+  QTest::newRow("designable_bool") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop DESIGNABLE false)\n};")
+                            << false << true << false << false << false << false << false;
+  QTest::newRow("scriptable_bool") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop SCRIPTABLE false)\n};")
+                            << false << true << false << false << false << false << false;
   QTest::newRow("stored") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop STORED false)\n};")
-                          << true << false << false << false << false << false
-                          << true << true << false << false << false << false;
+                          << false << true << false << false << false << false << false;
   QTest::newRow("user") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop USER true)\n};")
-                        << true << false << false << false << false << false
-                        << true << true << true << true << false << false;
+                        << false << true << false << false << false << false << false;
   QTest::newRow("constant") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop CONSTANT)\n};")
-                            << true << false << false << false << false << false
-                            << true << true << true << false << true << false;
+                            << false << true << false << false << false << false << false;
   QTest::newRow("final") << QByteArray("class Class{\n__qt_property__(bool myProp READ prop FINAL)\n};")
-                          << true << false << false << false << false << false
-                          << true << true << true << false << false << true;
+                          << false << true << false << false << false << false << false;
 }
 
 void TestParser::testQProperty()
 {
   QFETCH(QByteArray, code);
+  QFETCH(bool, hasMember);
   QFETCH(bool, hasGetterMethod);
   QFETCH(bool, hasSetterMethod);
   QFETCH(bool, hasResetterMethod);
   QFETCH(bool, hasNotifierMethod);
   QFETCH(bool, hasDesignableMethod);
   QFETCH(bool, hasScriptableMethod);
-  QFETCH(bool, isDesignable);
-  QFETCH(bool, isScriptable);
-  QFETCH(bool, isStored);
-  QFETCH(bool, isUser);
-  QFETCH(bool, isConstant);
-  QFETCH(bool, isFinal);
 
   TranslationUnitAST* ast = parse(code);
 
@@ -764,18 +747,13 @@ void TestParser::testQProperty()
   QPropertyDeclarationAST* propAst = static_cast<QPropertyDeclarationAST*>
                                                 (getAST(ast, AST::Kind_QPropertyDeclaration));
 
+  QVERIFY((propAst->member != 0) == hasMember);
   QVERIFY((propAst->getter != 0) == hasGetterMethod);
   QVERIFY((propAst->setter != 0) == hasSetterMethod);
   QVERIFY((propAst->resetter != 0) == hasResetterMethod);
   QVERIFY((propAst->notifier != 0) == hasNotifierMethod);
   QVERIFY((propAst->designableMethod != 0) == hasDesignableMethod);
   QVERIFY((propAst->scriptableMethod != 0) == hasScriptableMethod);
-  QCOMPARE(propAst->designableValue, isDesignable);
-  QCOMPARE(propAst->scriptableValue, isScriptable);
-  QCOMPARE(propAst->stored, isStored);
-  QCOMPARE(propAst->user, isUser);
-  QCOMPARE(propAst->constant, isConstant);
-  QCOMPARE(propAst->final, isFinal);
 }
 
 void TestParser::testDesignatedInitializers()
diff --git a/projectbuilders/cmakebuilder/cmakebuilder.cpp b/projectbuilders/cmakebuilder/cmakebuilder.cpp
index 850acec..b28c2d2 100644
--- a/projectbuilders/cmakebuilder/cmakebuilder.cpp
+++ b/projectbuilders/cmakebuilder/cmakebuilder.cpp
@@ -31,6 +31,7 @@
 #include <interfaces/iplugincontroller.h>
 #include <project/interfaces/ibuildsystemmanager.h>
 #include <project/builderjob.h>
+#include <projectbuilders/makebuilder/imakebuilder.h>
 
 #include <kpluginfactory.h>
 #include <kpluginloader.h>
@@ -78,9 +79,7 @@ void CMakeBuilder::addBuilder(const QString& neededfile, const QStringList& gene
             foreach(const QString& gen, generators) {
                 m_buildersForGenerator[gen] = b;
             }
-            connect(i, SIGNAL(built(KDevelop::ProjectBaseItem*)), this, SLOT(buildFinished(KDevelop::ProjectBaseItem*)));
-            connect(i, SIGNAL(failed(KDevelop::ProjectBaseItem*)), this, SLOT(buildFinished(KDevelop::ProjectBaseItem*)));
-            
+
             connect(i, SIGNAL(built(KDevelop::ProjectBaseItem*)), this, SIGNAL(built(KDevelop::ProjectBaseItem*)));
             connect(i, SIGNAL(failed(KDevelop::ProjectBaseItem*)), this, SIGNAL(failed(KDevelop::ProjectBaseItem*)));
             connect(i, SIGNAL(cleaned(KDevelop::ProjectBaseItem*)), this, SIGNAL(cleaned(KDevelop::ProjectBaseItem*)));
@@ -93,33 +92,12 @@ void CMakeBuilder::addBuilder(const QString& neededfile, const QStringList& gene
     }
 }
 
-void CMakeBuilder::buildFinished(KDevelop::ProjectBaseItem* it)
-{
-    if(m_deleteWhenDone.remove(it)) {
-        delete it->parent();
-    }
-}
-
 KJob* CMakeBuilder::build(KDevelop::ProjectBaseItem *dom)
 {
-    KDevelop::ProjectBaseItem* builditem = dom;
     KDevelop::IProject* p = dom->project();
     IProjectBuilder* builder = builderForProject(p);
     if( builder )
     {
-        if(dom->file())
-        {
-            KDevelop::ProjectFileItem* file = dom->file();
-            int lastDot = file->text().lastIndexOf('.');
-            QString target = file->text().mid(0, lastDot)+".o";
-             
-            CMakeFolderItem *fldr = new CMakeFolderItem(p, dom->url().upUrl(), KUrl::relativeUrl(p->folder(), file->url().upUrl()), 0);
-            KDevelop::ProjectTargetItem *it = new KDevelop::ProjectTargetItem(p, target);
-            fldr->appendRow(it);
-             
-            builditem=it;
-            m_deleteWhenDone << it;
-        }
         KJob* configure = 0;
         if( CMake::checkForNeedingConfigure(dom->project()) )
         {
@@ -131,15 +109,30 @@ KJob* CMakeBuilder::build(KDevelop::ProjectBaseItem *dom)
                                i18n("No Build Directory configured, cannot build"), i18n("Aborting build") );
             return 0;
         }
-        
+        KJob* build = 0;
+        if(dom->file())
+        {
+            IMakeBuilder* makeBuilder = dynamic_cast<IMakeBuilder*>(builder);
+            if (!makeBuilder) {
+                return 0;
+            }
+            KDevelop::ProjectFileItem* file = dom->file();
+            int lastDot = file->text().lastIndexOf('.');
+            QString target = file->text().mid(0, lastDot)+".o";
+            build = makeBuilder->executeMakeTarget(dom->parent(), target);
+            qDebug() << "create build job for target" << build << dom << target;
+        }
         kDebug(9032) << "Building with make";
-        KJob* build = builder->build(builditem);
-        if( configure ) 
+        if (!build)
+        {
+            build = builder->build(dom);
+        }
+        if( configure )
         {
             kDebug() << "creating composite job";
             KDevelop::BuilderJob* builderJob = new KDevelop::BuilderJob;
-            builderJob->addCustomJob( KDevelop::BuilderJob::Configure, configure, builditem );
-            builderJob->addCustomJob( KDevelop::BuilderJob::Build, build, builditem );
+            builderJob->addCustomJob( KDevelop::BuilderJob::Configure, configure, dom );
+            builderJob->addCustomJob( KDevelop::BuilderJob::Build, build, dom );
             builderJob->updateJobName();
             build = builderJob;
         }
diff --git a/projectbuilders/cmakebuilder/cmakebuilder.h b/projectbuilders/cmakebuilder/cmakebuilder.h
index 89597b3..99ebef9 100644
--- a/projectbuilders/cmakebuilder/cmakebuilder.h
+++ b/projectbuilders/cmakebuilder/cmakebuilder.h
@@ -59,9 +59,7 @@ public:
 	virtual QList< KDevelop::IProjectBuilder* > additionalBuilderPlugins( KDevelop::IProject* project ) const;
 
 //     bool updateConfig( KDevelop::IProject* project );
-private Q_SLOTS:
-    void buildFinished(KDevelop::ProjectBaseItem*);
-    
+
 Q_SIGNALS:
     void built(KDevelop::ProjectBaseItem*);
     void failed(KDevelop::ProjectBaseItem*);
@@ -73,7 +71,6 @@ private:
     void addBuilder(const QString& neededfile, const QStringList& generator, KDevelop::IPlugin* i);
     KDevelop::IProjectBuilder* builderForProject(KDevelop::IProject* p) const;
     QMap<QString, KDevelop::IProjectBuilder*> m_builders;
-    QSet<KDevelop::ProjectBaseItem*> m_deleteWhenDone;
     QMap<QString, IProjectBuilder*> m_buildersForGenerator;
 };
 
diff --git a/projectbuilders/makebuilder/kdevmakebuilder.desktop.cmake b/projectbuilders/makebuilder/kdevmakebuilder.desktop.cmake
index 31f2ead..c82a76a 100644
--- a/projectbuilders/makebuilder/kdevmakebuilder.desktop.cmake
+++ b/projectbuilders/makebuilder/kdevmakebuilder.desktop.cmake
@@ -73,7 +73,7 @@ GenericName[zh_CN]=工程构建器
 GenericName[zh_TW]=專案編譯器
 Comment=KDevelop Make Builder
 Comment[bs]=KDevelop Make izgraditelj
-Comment[ca]=Constructor KDevelop Make
+Comment[ca]=Constructor Make del KDevelop
 Comment[ca@valencia]=Constructor KDevelop Make
 Comment[da]=Make-bygger til KDevelop
 Comment[de]=Make-Builder von KDevelop
diff --git a/projectbuilders/makebuilder/makejob.cpp b/projectbuilders/makebuilder/makejob.cpp
index b6560f5..8041a17 100644
--- a/projectbuilders/makebuilder/makejob.cpp
+++ b/projectbuilders/makebuilder/makejob.cpp
@@ -51,6 +51,7 @@ MakeJob::MakeJob(QObject* parent, KDevelop::ProjectBaseItem* item,
     , m_overrideTargets(overrideTargets)
     , m_variables(variables)
 {
+    Q_ASSERT(item && item->model() && m_idx.isValid() && this->item() == item);
     setCapabilities( Killable );
     setFilteringStrategy( OutputModel::CompilerFilter );
     setProperties( NeedWorkingDirectory | PortableMessages | DisplayStderr | IsBuilderHint );
diff --git a/projectbuilders/ninjabuilder/kcm_kdev_ninjabuilder.desktop b/projectbuilders/ninjabuilder/kcm_kdev_ninjabuilder.desktop
index 6af80f4..678b51a 100644
--- a/projectbuilders/ninjabuilder/kcm_kdev_ninjabuilder.desktop
+++ b/projectbuilders/ninjabuilder/kcm_kdev_ninjabuilder.desktop
@@ -11,29 +11,37 @@ X-KDE-ParentComponents=KDevNinjaBuilder
 X-KDE-CfgDlgHierarchy=BUILDTOOL
 
 Name=Ninja
+Name[bs]=Ninja
+Name[ca]=Ninja
 Name[de]=Ninja
 Name[es]=Ninja
 Name[fi]=Ninja
 Name[fr]=Ninja
 Name[gl]=Ninja
 Name[hu]=Ninja
+Name[kk]=Ninja
 Name[nl]=Ninja
 Name[pt]=Ninja
 Name[pt_BR]=Ninja
+Name[sk]=Ninja
 Name[sl]=Ninja
 Name[sv]=Ninja
 Name[uk]=Ninja
 Name[x-test]=xxNinjaxx
 Name[zh_TW]=Ninja
 Comment=Configure Ninja settings
+Comment[bs]=Konfiguriši "Ninja" podešavanja
+Comment[ca]=Configura els arranjaments de Ninja
 Comment[de]=Ninja-Einstellungen festlegen
 Comment[es]=Configurar las preferencias de Ninja
 Comment[fi]=Ninja-asetukset
 Comment[gl]=Configura os parámetros de Ninja
 Comment[hu]=Ninja beállítások módosítása
+Comment[kk]=Ninja параметрлерін баптау
 Comment[nl]=Ninja-instellingen configureren
 Comment[pt]=Configurar as definições do Ninja
 Comment[pt_BR]=Configure as opções do Ninja
+Comment[sk]=Konfigurovať nastavenia Ninja
 Comment[sl]=Nastavite možnosti za Ninja
 Comment[sv]=Anpassa inställningar för Ninja
 Comment[uk]=Налаштувати параметри Ninja
diff --git a/projectbuilders/ninjabuilder/kdevninja.desktop.cmake b/projectbuilders/ninjabuilder/kdevninja.desktop.cmake
index 08703fa..d475f2e 100644
--- a/projectbuilders/ninjabuilder/kdevninja.desktop.cmake
+++ b/projectbuilders/ninjabuilder/kdevninja.desktop.cmake
@@ -1,15 +1,19 @@
 [Desktop Entry]
 Type=Service
 Name=Ninja Project Builder
+Name[bs]=Graditelj Ninja projekta
+Name[ca]=Constructor de projectes Ninja
 Name[cs]=Překladač projektů Ninja
 Name[de]=Ninja-Projekterstellung
 Name[es]=Constructor de proyectos Ninja
 Name[fi]=Ninja-projektikäännin
 Name[gl]=Construtor de proxectos Ninja
 Name[hu]=Ninja projektfordító
+Name[kk]=Ninja жоба құрастырғышы
 Name[nl]=Ninja-project bouwprogramma
 Name[pt]=Construtor de Projectos Ninja
 Name[pt_BR]=Compilador de projetos Ninja
+Name[sk]=Zostavovač projektov Ninja
 Name[sl]=Izgrajevalnik projektov Ninja
 Name[sv]=Ninja projektbyggverktyg
 Name[uk]=Збирач проектів Ninja
@@ -52,14 +56,18 @@ GenericName[x-test]=xxProject Builderxx
 GenericName[zh_CN]=工程构建器
 GenericName[zh_TW]=專案編譯器
 Comment=KDevelop Ninja Builder
+Comment[bs]=KDevelop Ninja izgraditelj
+Comment[ca]=Constructor Ninja del KDevelop
 Comment[de]=KDevelop-Ninja-Erstellung
 Comment[es]=Constructor Ninja para KDevelop
 Comment[fi]=KDevelop Ninja-käännin
 Comment[gl]=Construtor Ninja para o KDevelop
 Comment[hu]=KDevelop Ninja fordító
+Comment[kk]=KDevelop-тың Ninja құрастырғышы
 Comment[nl]=KDevelop Ninja-bouwprogramma
 Comment[pt]=Construtor Ninja do KDevelop
 Comment[pt_BR]=Compilador Ninja do KDevelop
+Comment[sk]=Zostavovač KDevelop Ninja
 Comment[sl]=Izgrajevalnik Ninja za KDevelop
 Comment[sv]=KDevelop byggverktyg för Ninja
 Comment[uk]=Збирач Ninja для KDevelop
diff --git a/projectbuilders/ninjabuilder/ninjaconfig.ui b/projectbuilders/ninjabuilder/ninjaconfig.ui
index 520d7be..da9ab07 100644
--- a/projectbuilders/ninjabuilder/ninjaconfig.ui
+++ b/projectbuilders/ninjabuilder/ninjaconfig.ui
@@ -74,17 +74,17 @@
      </property>
      <item>
       <property name="text">
-       <string>kdesu</string>
+       <string notr="true">kdesu</string>
       </property>
      </item>
      <item>
       <property name="text">
-       <string>kdesudo</string>
+       <string notr="true">kdesudo</string>
       </property>
      </item>
      <item>
       <property name="text">
-       <string>sudo</string>
+       <string notr="true">sudo</string>
       </property>
      </item>
     </widget>
diff --git a/projectbuilders/ninjabuilder/ninjajob.cpp b/projectbuilders/ninjabuilder/ninjajob.cpp
index ee5731c..611f702 100644
--- a/projectbuilders/ninjabuilder/ninjajob.cpp
+++ b/projectbuilders/ninjabuilder/ninjajob.cpp
@@ -147,7 +147,7 @@ void NinjaJob::appendLines(const QStringList& lines)
     for(QStringList::iterator it=ret.end(); it!=ret.begin(); ) {
         --it;
         bool curr = it->startsWith('[');
-        if(prev && curr || it->endsWith("] "))
+        if((prev && curr) || it->endsWith("] "))
             it = ret.erase(it);
         prev = curr;
     }
diff --git a/projectmanagers/cmake/CMakeLists.txt b/projectmanagers/cmake/CMakeLists.txt
index 0a1cf43..959ca20 100644
--- a/projectmanagers/cmake/CMakeLists.txt
+++ b/projectmanagers/cmake/CMakeLists.txt
@@ -19,7 +19,7 @@ set( cmakecommon_SRCS
   parser/cmakecondition.cpp
   parser/cmakeprojectvisitor.cpp 
   parser/variablemap.cpp
-  parser/cmakedebugvisitor.cpp
+#   parser/cmakedebugvisitor.cpp
   parser/cmakecachereader.cpp
   parser/cmakeparserutils.cpp
   parser/cmakeduchaintypes.cpp
diff --git a/projectmanagers/cmake/kdevcmakedocumentation.desktop.cmake b/projectmanagers/cmake/kdevcmakedocumentation.desktop.cmake
index 1ec7da7..22bd2d4 100644
--- a/projectmanagers/cmake/kdevcmakedocumentation.desktop.cmake
+++ b/projectmanagers/cmake/kdevcmakedocumentation.desktop.cmake
@@ -73,7 +73,7 @@ GenericName[zh_CN]=文档支持
 GenericName[zh_TW]=文件支援
 Comment=Allows KDevelop to provide CMake documentation
 Comment[bs]=Dopišta KDevelopu da obezbjedi CMake dokumentaciju
-Comment[ca]=Permet a KDevelop proporcionar informació de CMake
+Comment[ca]=Permet a KDevelop proporcionar documentació de CMake
 Comment[ca@valencia]=Permet a KDevelop proporcionar informació de CMake
 Comment[cs]=Umožňuje KDevelop poskytovat dokumentaci CMake
 Comment[da]=Lader KDevelop tilbyde CMake-dokumentation
diff --git a/projectmanagers/cmake/parser/cmakelistsparser.cpp b/projectmanagers/cmake/parser/cmakelistsparser.cpp
index 1eba216..0951b3f 100644
--- a/projectmanagers/cmake/parser/cmakelistsparser.cpp
+++ b/projectmanagers/cmake/parser/cmakelistsparser.cpp
@@ -72,7 +72,7 @@ QString CMakeFunctionArgument::unescapeValue(const QString& value)
 void CMakeFunctionDesc::addArguments( const QStringList& args, bool addEvenIfEmpty )
 {
     if(addEvenIfEmpty && args.isEmpty())
-        arguments += QString();
+        arguments += CMakeFunctionArgument();
     else foreach( const QString& arg, args )
     {
         CMakeFunctionArgument cmakeArg( arg );
@@ -128,7 +128,7 @@ CMakeFileContent CMakeListsParser::readCMakeFile(const QString & fileName)
                 function.line = token->line;
                 function.column = token->column;
 
-                readError = !readCMakeFunction( lexer, function, fileName );
+                readError = !readCMakeFunction( lexer, function);
                 ret.append(function);
 
                 if(readError)
@@ -143,7 +143,7 @@ CMakeFileContent CMakeListsParser::readCMakeFile(const QString & fileName)
     return ret;
 }
 
-bool CMakeListsParser::readCMakeFunction(cmListFileLexer *lexer, CMakeFunctionDesc &func, const QString & fileName)
+bool CMakeListsParser::readCMakeFunction(cmListFileLexer *lexer, CMakeFunctionDesc &func)
 {
         // Command name has already been parsed.  Read the left paren.
     cmListFileLexer_Token* token;
@@ -171,18 +171,18 @@ bool CMakeListsParser::readCMakeFunction(cmListFileLexer *lexer, CMakeFunctionDe
                 } else if(parenthesis<0)
                     return false;
                 else
-                    func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), false, fileName, token->line, token->column );
+                    func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), false, token->line, token->column );
                 break;
             case cmListFileLexer_Token_ParenLeft:
                 parenthesis++;
-                func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), false, fileName, token->line, token->column );
+                func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), false, token->line, token->column );
                 break;
             case cmListFileLexer_Token_Identifier:
             case cmListFileLexer_Token_ArgumentUnquoted:
-                func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), false, fileName, token->line, token->column );
+                func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), false, token->line, token->column );
                 break;
             case cmListFileLexer_Token_ArgumentQuoted:
-                func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), true, fileName, token->line, token->column+1 );
+                func.arguments << CMakeFunctionArgument( QString::fromLocal8Bit(token->text), true, token->line, token->column+1 );
                 break;
             case cmListFileLexer_Token_Newline:
                 break;
@@ -226,10 +226,13 @@ bool CMakeFunctionDesc::operator==(const CMakeFunctionDesc & other) const
     value=unescapeValue(value);
 }*/
 
-CMakeFunctionArgument::CMakeFunctionArgument(const QString & v, bool q, const QString &, quint32 l, quint32 c)
-    : value(v), quoted(q)/*, filePath(file)*/, line(l), column(c)
+CMakeFunctionArgument::CMakeFunctionArgument(const QString& v, bool q, quint32 l, quint32 c)
+    : value(unescapeValue(v)), quoted(q), line(l), column(c)
 {
-    value=unescapeValue(value);
 }
 
+CMakeFunctionArgument::CMakeFunctionArgument(const QString& v)
+    : value(v), quoted(false), line(0), column(0)
+{
+}
 
diff --git a/projectmanagers/cmake/parser/cmakelistsparser.h b/projectmanagers/cmake/parser/cmakelistsparser.h
index d91ebee..b3d99c8 100644
--- a/projectmanagers/cmake/parser/cmakelistsparser.h
+++ b/projectmanagers/cmake/parser/cmakelistsparser.h
@@ -39,9 +39,8 @@
 struct CMakeFunctionArgument
 {
     CMakeFunctionArgument(): value(), quoted(false), line(0), column(0) {}
-    
-    CMakeFunctionArgument(const QString& v, bool q = false,
-                          const QString& file = QString(), quint32 l = 0, quint32 c=0);
+    CMakeFunctionArgument(const QString& v);
+    CMakeFunctionArgument(const QString& v, bool q, quint32 l = 0, quint32 c=0);
     inline bool operator == (const CMakeFunctionArgument& r) const
     {
         return (this->value == r.value) && (this->quoted == r.quoted);
@@ -135,9 +134,7 @@ public:
     static CMakeFileContent readCMakeFile(const QString& fileName);
     
 private:
-    static bool readCMakeFunction( cmListFileLexer*,
-                                    CMakeFunctionDesc&,
-                                    const QString& fileName);
+    static bool readCMakeFunction( cmListFileLexer* lexer, CMakeFunctionDesc& func);
 
 };
 
diff --git a/projectmanagers/cmake/parser/cmakeprojectvisitor.cpp b/projectmanagers/cmake/parser/cmakeprojectvisitor.cpp
index e63b18e..ba65509 100644
--- a/projectmanagers/cmake/parser/cmakeprojectvisitor.cpp
+++ b/projectmanagers/cmake/parser/cmakeprojectvisitor.cpp
@@ -978,6 +978,7 @@ int CMakeProjectVisitor::visit(const FindLibraryAst *flib)
         locationOptions += m_vars->value("CMAKE_FRAMEWORK_PATH");
         
         locationOptions += m_vars->value("CMAKE_SYSTEM_LIBRARY_PATH");
+        locationOptions += m_vars->value("CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES");
         
         opt=m_vars->value("CMAKE_SYSTEM_PREFIX_PATH");
         foreach(const QString& s, opt)
diff --git a/projectmanagers/cmake/tests/cmakemanagertest.cpp b/projectmanagers/cmake/tests/cmakemanagertest.cpp
index 0d814b8..682f295 100644
--- a/projectmanagers/cmake/tests/cmakemanagertest.cpp
+++ b/projectmanagers/cmake/tests/cmakemanagertest.cpp
@@ -186,6 +186,10 @@ void CMakeManagerTest::testTargetIncludeDirectories()
 
 void CMakeManagerTest::testQt5App()
 {
+    if (!qgetenv("KDEV_CMAKE_TEST_QT5").toInt()) {
+        QSKIP("Test only passes if Qt5 is available, define KDEV_CMAKE_TEST_QT5 to enable this test.", SkipAll);
+    }
+
     IProject* project = loadProject("qt5_app");
 
     KUrl mainCpp(project->folder(), "main.cpp");
diff --git a/projectmanagers/cmake/tests/cmakeprojectvisitortest.cpp b/projectmanagers/cmake/tests/cmakeprojectvisitortest.cpp
index bd9a238..7fb2261 100644
--- a/projectmanagers/cmake/tests/cmakeprojectvisitortest.cpp
+++ b/projectmanagers/cmake/tests/cmakeprojectvisitortest.cpp
@@ -518,6 +518,13 @@ void CMakeProjectVisitorTest::testRun_data()
                             "set_target_properties(mylib PROPERTIES fu hello)\n"
                             "get_target_property(result My::Lib fu)\n"
                             << cacheValues << results;
+    results.clear();
+    results << StringPair("result", "hell\\o");
+    QTest::newRow("escaping") <<
+                            "set(resultA \"hell\\\\o\")\n"
+                            "set(resultB \"${resultA}\")\n"
+                            "set(result \"${resultB}\")\n"
+                            << cacheValues << results;
 }
 
 void CMakeProjectVisitorTest::testRun()
diff --git a/providers/ghprovider/CMakeLists.txt b/providers/ghprovider/CMakeLists.txt
index 70c36c6..91abddd 100644
--- a/providers/ghprovider/CMakeLists.txt
+++ b/providers/ghprovider/CMakeLists.txt
@@ -43,6 +43,7 @@ target_link_libraries(kdevghprovider
 )
 
 install(TARGETS kdevghprovider DESTINATION ${PLUGIN_INSTALL_DIR})
-install(FILES kdevghprovider.desktop DESTINATION ${SERVICES_INSTALL_DIR})
+configure_file(kdevghprovider.desktop.cmake ${CMAKE_CURRENT_BINARY_DIR}/kdevghprovider.desktop)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/kdevghprovider.desktop DESTINATION ${SERVICES_INSTALL_DIR})
 
 add_subdirectory(cmake)
diff --git a/providers/ghprovider/kdevghprovider.desktop b/providers/ghprovider/kdevghprovider.desktop
deleted file mode 100644
index f4081ce..0000000
--- a/providers/ghprovider/kdevghprovider.desktop
+++ /dev/null
@@ -1,64 +0,0 @@
-[Desktop Entry]
-Type=Service
-Icon=kdevgh
-Exec=blubb
-Comment=This plugin helps to obtain projects from Github
-Comment[de]=Dieses Modul hilft dabei Github-Projekte zu beziehen
-Comment[es]=Este complemento ayuda a obtener proyectos desde Github
-Comment[fi]=Tämä liitännäinen auttaa Github-projektien hakemisessa
-Comment[fr]=Ce module externe permet d'obtenir des projets depuis Github
-Comment[gl]=Este complemento permite obter proxectos de Github
-Comment[hu]=Ez a bővítmény segít a projektek megszerzésében a Githubról
-Comment[it]=Questa estensione consente di ottenere progetti da Github
-Comment[nl]=Deze plug-in helpt om projecten uit Github te verkrijgen
-Comment[pt]=Este 'plugin' ajuda a obter projectos do GitHub
-Comment[pt_BR]=Este plugin ajuda a obter projetos a partir do Github
-Comment[sl]=Ta vstavek pomaga pri pridobivanju projektov iz Github-a
-Comment[sv]=Insticksprogrammet hjälper till att erhålla projekt Github
-Comment[uk]=За допомогою цього додатка можна отримувати проекти з Github
-Comment[x-test]=xxThis plugin helps to obtain projects from Githubxx
-Comment[zh_TW]=此外掛程式能協助您從 Github 取得專案
-Name=Github Provider
-Name[cs]=Poskytovatel Github
-Name[de]=Github-Provider
-Name[es]=Proveedor de Github
-Name[fi]=Github-tarjoaja
-Name[fr]=Fournisseur Github
-Name[gl]=Fornecedor de Github
-Name[hu]=Github szolgáltató
-Name[it]=Fornitore Github
-Name[nl]=Github-leverancier
-Name[pt]=Fornecedor do GitHub
-Name[pt_BR]=Fornecedor do Github
-Name[sl]=Ponudnik za Github
-Name[sv]=Github-leverantör
-Name[uk]=Надавач даних Github
-Name[x-test]=xxGithub Providerxx
-Name[zh_TW]=Github 提供者
-GenericName=Github Provider
-GenericName[cs]=Poskytovatel Github
-GenericName[de]=Github-Provider
-GenericName[es]=Proveedor de Github
-GenericName[fi]=Github-tarjoaja
-GenericName[fr]=Fournisseur Github
-GenericName[gl]=Fornecedor de Github
-GenericName[hu]=Github szolgáltató
-GenericName[it]=Fornitore Github
-GenericName[nl]=Github-leverancier
-GenericName[pt]=Fornecedor do GitHub
-GenericName[pt_BR]=Fornecedor do Github
-GenericName[sl]=Ponudnik za Github
-GenericName[sv]=Github-leverantör
-GenericName[uk]=Надавач даних Github
-GenericName[x-test]=xxGithub Providerxx
-GenericName[zh_TW]=Github 提供者
-ServiceTypes=KDevelop/Plugin
-X-KDE-Library=kdevghprovider
-X-KDevelop-Version=16
-X-KDevelop-Category=Global
-X-KDE-PluginInfo-Name=kdevghprovider
-X-KDE-PluginInfo-Author=Miquel Sabaté
-X-KDE-PluginInfo-License=GPL
-X-KDE-PluginInfo-Category=Utilities
-X-KDevelop-Mode=GUI
-X-KDevelop-Interfaces=org.kdevelop.IProjectProvider
diff --git a/providers/ghprovider/kdevghprovider.desktop.cmake b/providers/ghprovider/kdevghprovider.desktop.cmake
new file mode 100644
index 0000000..496d0db
--- /dev/null
+++ b/providers/ghprovider/kdevghprovider.desktop.cmake
@@ -0,0 +1,76 @@
+[Desktop Entry]
+Type=Service
+Icon=kdevgh
+Exec=blubb
+Comment=This plugin helps to obtain projects from Github
+Comment[bs]=Ovaj dodatak omogućava dobijanje projekata iz Github
+Comment[ca]=Aquest connector ajuda a obtenir els projectes des de Github
+Comment[de]=Dieses Modul hilft dabei Github-Projekte zu beziehen
+Comment[es]=Este complemento ayuda a obtener proyectos desde Github
+Comment[fi]=Tämä liitännäinen auttaa Github-projektien hakemisessa
+Comment[fr]=Ce module externe permet d'obtenir des projets depuis Github
+Comment[gl]=Este complemento permite obter proxectos de Github
+Comment[hu]=Ez a bővítmény segít a projektek megszerzésében a Githubról
+Comment[it]=Questa estensione consente di ottenere progetti da Github
+Comment[kk]=Github жобаларын жүктеп алуға көмек плагині
+Comment[nl]=Deze plug-in helpt om projecten uit Github te verkrijgen
+Comment[pt]=Este 'plugin' ajuda a obter projectos do GitHub
+Comment[pt_BR]=Este plugin ajuda a obter projetos a partir do Github
+Comment[sk]=Tento modul pomáha získavať projekty z Github
+Comment[sl]=Ta vstavek pomaga pri pridobivanju projektov iz Github-a
+Comment[sv]=Insticksprogrammet hjälper till att erhålla projekt Github
+Comment[uk]=За допомогою цього додатка можна отримувати проекти з Github
+Comment[x-test]=xxThis plugin helps to obtain projects from Githubxx
+Comment[zh_TW]=此外掛程式能協助您從 Github 取得專案
+Name=Github Provider
+Name[bs]=Github pružalac
+Name[ca]=Proveïdor de Github
+Name[cs]=Poskytovatel Github
+Name[de]=Github-Provider
+Name[es]=Proveedor de Github
+Name[fi]=Github-tarjoaja
+Name[fr]=Fournisseur Github
+Name[gl]=Fornecedor de Github
+Name[hu]=Github szolgáltató
+Name[it]=Fornitore Github
+Name[kk]=Github таратушысы
+Name[nl]=Github-leverancier
+Name[pt]=Fornecedor do GitHub
+Name[pt_BR]=Fornecedor do Github
+Name[sk]=Poskytovateľ Github
+Name[sl]=Ponudnik za Github
+Name[sv]=Github-leverantör
+Name[uk]=Надавач даних Github
+Name[x-test]=xxGithub Providerxx
+Name[zh_TW]=Github 提供者
+GenericName=Github Provider
+GenericName[bs]=Github pružalac
+GenericName[ca]=Proveïdor de Github
+GenericName[cs]=Poskytovatel Github
+GenericName[de]=Github-Provider
+GenericName[es]=Proveedor de Github
+GenericName[fi]=Github-tarjoaja
+GenericName[fr]=Fournisseur Github
+GenericName[gl]=Fornecedor de Github
+GenericName[hu]=Github szolgáltató
+GenericName[it]=Fornitore Github
+GenericName[kk]=Github таратушысы
+GenericName[nl]=Github-leverancier
+GenericName[pt]=Fornecedor do GitHub
+GenericName[pt_BR]=Fornecedor do Github
+GenericName[sk]=Poskytovateľ Github
+GenericName[sl]=Ponudnik za Github
+GenericName[sv]=Github-leverantör
+GenericName[uk]=Надавач даних Github
+GenericName[x-test]=xxGithub Providerxx
+GenericName[zh_TW]=Github 提供者
+ServiceTypes=KDevelop/Plugin
+X-KDE-Library=kdevghprovider
+X-KDevelop-Version=16
+X-KDevelop-Category=Global
+X-KDE-PluginInfo-Name=kdevghprovider
+X-KDE-PluginInfo-Author=Miquel Sabaté
+X-KDE-PluginInfo-License=GPL
+X-KDE-PluginInfo-Category=Utilities
+X-KDevelop-Mode=GUI
+X-KDevelop-Interfaces=org.kdevelop.IProjectProvider
